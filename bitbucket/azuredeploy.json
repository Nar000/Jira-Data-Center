{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "scriptsBranch": {
            "type": "string",
            "defaultValue": "master",
            "metadata": {
                "description": "A branch in the repository to download scripts from. We want to be able to override it during development."
            }
        },
        "repositoryLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where the source of the template are located"
            },
            "defaultValue": "[concat('https://bitbucket.org/atlassian/atlassian-azure-deployment/raw/', parameters('scriptsBranch'), '/')]"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located"
            },
            "defaultValue": "[parameters('repositoryLocation')]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "bitbucketVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The Bitbucket software product version to install. You can also specify 'latest' to download the latest version available. If using with customDownloadUrl you have to specify the correct version."
            }
        },
        "customDownloadUrl": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Use this URL to override standard Atlassian download url eg for EAP, RC versions. NB will be used in conjunction with the bitbucketVersion parameter."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region (WestUS, CentralUs, AustraliaEast, etc) shared by all of the resources in the template"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for SSH access to Bitbucket Server nodes as well as for the jumpbox"
            }
        },
        "sshKey": {
            "type": "string",
            "metadata": {
                "description": "SSH key to allow access to jumpbox."
            }
        },
        "jumpboxSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "The size of jumpbox VM"
            }
        },
        "jumpboxHostname": {
            "type": "string",
            "defaultValue": "jumpbox",
            "metadata": {
                "description": "The hostname for jumpbox. Does not affect it's DNS name"
            }
        },
        "bbsSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_DS3_v2",
                "Standard_D8s_v3",
                "Standard_DS4_v2",
                "Standard_E2s_v3",
                "Standard_E4-2s_v3",
                "Standard_E8-4s_v3"
            ],
            "metadata": {
                "description": "The size of Bitbucket Server nodes vm"
            }
        },
        "bbsNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The amount of Bitbucket Server nodes to deploy"
            }
        },
        "bbsNodePrefix": {
            "type": "string",
            "defaultValue": "bbsnode",
            "metadata": {
                "description": "Hostname prefix for nodes in Bitbucket Server cluster"
            }
        },
        "bbsDiskSize": {
            "type": "int",
            "defaultValue": 31,
            "metadata": {
                "description": "The size (in GB) of the data disk that is used for logs on a Bitbucket Server node"
            }
        },
        "bbsDiskStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "The type of storage account used for logs on a Bitbucket Server node"
            }
        },
        "bbsHazelcastTag": {
            "type": "string",
            "defaultValue": "HAZELCAST",
            "metadata": {
                "description": "Hazelcast tag for nodes in Bitbucket Server cluster"
            }
        },
        "bbsHazelcastPort": {
            "type": "string",
            "defaultValue": "5701",
            "metadata": {
                "description": "Internal port that Bitbucket Server uses for Hazelcast communication"
            }
        },
        "dbType": {
            "type": "string",
            "allowedValues": [
                "sqlserver",
                "postgres",
                "mysql"
            ],
            "defaultValue": "sqlserver",
            "metadata": {
                "description": "The database type."
            }
        },
        "dbTier": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium",
                "GeneralPurpose",
                "BusinessCritical"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "The database service tier. Note that if the 'bbClusterSize' parameter is used this value will be ignored."
            }
        },
        "dbTierSize": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "S1",
                "S2",
                "S3",
                "S4",
                "S6",
                "S7",
                "S9",
                "S12",
                "P1",
                "P2",
                "P4",
                "P6",
                "P11",
                "P15",
                "GP_Gen4_1",
                "GP_Gen4_10",
                "GP_Gen4_16",
                "GP_Gen4_2",
                "GP_Gen4_24",
                "GP_Gen4_3",
                "GP_Gen4_4",
                "GP_Gen4_5",
                "GP_Gen4_6",
                "GP_Gen4_7",
                "GP_Gen4_8",
                "GP_Gen4_9",
                "GP_Gen5_10",
                "GP_Gen5_12",
                "GP_Gen5_14",
                "GP_Gen5_16",
                "GP_Gen5_18",
                "GP_Gen5_2",
                "GP_Gen5_20",
                "GP_Gen5_24",
                "GP_Gen5_32",
                "GP_Gen5_4",
                "GP_Gen5_40",
                "GP_Gen5_6",
                "GP_Gen5_8",
                "GP_Gen5_80",
                "BC_Gen4_1",
                "BC_Gen4_10",
                "BC_Gen4_16",
                "BC_Gen4_2",
                "BC_Gen4_24",
                "BC_Gen4_3",
                "BC_Gen4_4",
                "BC_Gen4_5",
                "BC_Gen4_6",
                "BC_Gen4_7",
                "BC_Gen4_8",
                "BC_Gen4_9",
                "BC_Gen5_10",
                "BC_Gen5_12",
                "BC_Gen5_14",
                "BC_Gen5_16",
                "BC_Gen5_18",
                "BC_Gen5_2",
                "BC_Gen5_20",
                "BC_Gen5_24",
                "BC_Gen5_32",
                "BC_Gen5_4",
                "BC_Gen5_40",
                "BC_Gen5_6",
                "BC_Gen5_8",
                "BC_Gen5_80"
            ],
            "defaultValue": "S2",
            "metadata": {
                "description": "The size of the database service tier. Basic, Standard (S1..S12) and Premium (P1..P15) tier sizes are available. Choose GP and BC SKUs for vCore model. Note that if the 'bbClusterSize' parameter is used this value will be ignored."
            }
        },
        "azureSqlUsername": {
            "type": "string",
            "metadata": {
                "description": "Username to access Bitbucket Server database."
            }
        },
        "azureSqlPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password to access Bitbucket Server database."
            }
        },
        "nfsVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_DS3_v2",
                "Standard_D8s_v3",
                "Standard_DS4_v2",
                "Standard_E8-4s_v3",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_L16s",
                "Standard_L32s",
                "Standard_D16_v3",
                "Standard_E16s_v3"
            ],
            "metadata": {
                "description": "The size of the VM that is used for NFS server."
            }
        },
        "nfsDiskSize": {
            "type": "int",
            "defaultValue": 128,
            "allowedValues": [
                128,
                256,
                512,
                1024,
                2048,
                4095
            ],
            "metadata": {
                "description": "The size of the data disk for Git repositories in GB"
            }
        },
        "appGtwyClusterSize": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 2,
            "minValue": 1,
            "metadata": {
                "description": "The number of nodes in the Application Gateway cluster."
            }
        },
        "appGtwyTier": {
            "type": "string",
            "allowedValues": [
                "Standard_Small",
                "Standard_Medium",
                "Standard_Large"
            ],
            "defaultValue": "Standard_Medium",
            "metadata": {
                "description": "The Application Gateway size."
            }
        },
        "cname": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "This is the Canonical Name record (CNAME) for your organization. If you don't provide one, Azure will generate a random sub domain for your instance."
            }
        },
        "sslBase64EncodedPfxCertificate": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The certificate to be used for SSL termination on the Azure Application Gateway."
            }
        },
        "sslPfxCertificatePassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The password of the certificate for SSL termination."
            }
        },
        "httpGatewaySize": {
            "type": "string",
            "allowedValues": [
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3"
            ],
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "VM type which used for forwarding HTTP traffic from Load Balancer to Application Gateway"
            }
        },
        "license": {
            "type": "securestring",
            "defaultValue": "AAABpg0ODAoPeNp1kUtP20AUhff+FVfqLtI4DkkgRLLUYA+UqtiR7SzawmLiXPBQe8aaR9r013ewDYG2LGZzH2fO+e6HorKQyD0ECwhmy/lsOZ3D1U0BJ8Fk4SW22aJK7zcalQ7JxIukMKw0CWswfDSVbJj+yEzNtOZM+KVsPG2YrvwvvEShsTi02M3mxSoraPZv96WztqqsmMaYGQyfPieTCQkW3ntKQ53+ark6dEvr6fT007NDesN4/Y7FHNUe1XUcXtAzSmbxtxNymn4+I1fT88Xg0AmyCIVBFRpl0cvtVpeKt4ZL0VdGo1GSFuQyzcg6S+NNVFynCdnk1DXCSKFztIPtAUyFMHgFKkq5QwWtko9YGvheGdPeLsfjB+m/sTiu+w2C/cadD7EEIQ3suDaKb61Bp8w1GAml1UY27kC+50I7z4KJ8jUYR/N8oNmnc3z4Hl9yRBldFTQmF1+fvP+f2RDBQduIH0L+FF5Ok9A9Mg8CL1UPTHDNOjyr31YhxNjW8tA4hl5Hw3X+Pm2MR6Z0z2rbTcGQHe6lgl5rd9Q6zvX2/wDFKfAUMCsCFH8cSCeQYWgwBdkxpTeUqGiTfg2qAhNxOHcjUrs7UMuuXFQw4T4+mxFqX02k8",
            "metadata": {
                "description": "Bitbucket Data Center 14 days evaluation license."
            }
        },
        "bitbucketAdminUsername": {
            "type": "string",
            "defaultValue": "ssh",
            "metadata": {
                "description": "Username for Bitbucket Server administrator user. By default it's the same as ssh user."
            }
        },
        "bitbucketAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for Bitbucket Server administrator user."
            }
        },
        "bitbucketAdminName": {
            "type": "string",
            "defaultValue": "John Doe",
            "metadata": {
                "description": "Bitbucket Server administorator full name."
            }
        },
        "bitbucketAdminEmail": {
            "type": "string",
            "defaultValue": "admin@example.com",
            "metadata": {
                "description": "Bitbucket Server administrator email."
            }
        },
        "esDataNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of elasticsearch data nodes to be deployed."
            }
        },
        "esDataDiskSize": {
            "type": "int",
            "defaultValue": 32,
            "metadata": {
                "description": "The size of the data disk for elasticsearch in GB."
            }
        },
        "esNodeSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_DS3_v2",
                "Standard_D8s_v3",
                "Standard_DS4_v2",
                "Standard_E2s_v3",
                "Standard_E4-2s_v3",
                "Standard_E8-4s_v3"
            ],
            "metadata": {
                "description": "The size of Elasticsearch nodes VM."
            }
        },
        "enableAnalytics": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable Azure Operational Insights."
            }
        },
        "enableEmailAlerts": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable email alerts."
            }
        },
        "enableApplicationInsights": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable Azure Application Insights."
            }
        },
        "workspaceSku": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Free",
                "PerNode",
                "Standalone",
                "Standard",
                "Premium",
                "Unlimited",
                "PerGB2018"
            ],
            "metadata": {
                "description": "Workspace SKU Pricing Tier. Options depend upon when Azure Subscription created. If after 2018, use 'PerGB2018' otherwise 'Free'."
            }
        }
    },
    "variables": {
        "vpcTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-vpc.json', parameters('_artifactsLocationSasToken')))]",
        "bitbucketTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-bitbucket.json', parameters('_artifactsLocationSasToken')))]",
        "domainTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-domain.json', parameters('_artifactsLocationSasToken')))]",
        "alertsTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-alerts.json', parameters('_artifactsLocationSasToken')))]"
    },
    "resources": [
        {
            "apiVersion": "2018-05-01",
            "name": "pid-49ff88fd-5e3c-58f7-aadf-6a73ac08ea91",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "vpcTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vpcTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "bbsHazelcastPort": {
                        "value": "[parameters('bbsHazelcastPort')]"
                    },
                    "httpGatewaySize": {
                        "value": "[parameters('httpGatewaySize')]"
                    },
                    "jumpboxHostname": {
                        "value": "[parameters('jumpboxHostname')]"
                    },
                    "jumpboxSize": {
                        "value": "[parameters('jumpboxSize')]"
                    },
                    "nfsVmSize": {
                        "value": "[parameters('nfsVmSize')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "bitbucketTemplate",
            "dependsOn": [
                "vpcTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('bitbucketTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "appGtwyClusterSize": {
                        "value": "[parameters('appGtwyClusterSize')]"
                    },
                    "appGtwyTier": {
                        "value": "[parameters('appGtwyTier')]"
                    },
                    "cname": {
                        "value": "[if(greater(length(parameters('cname')), 0), concat('bitbucket.', parameters('cname')), parameters('cname'))]"
                    },
                    "sshCname": {
                        "value": "[if(greater(length(parameters('cname')), 0), concat('ssh-bitbucket.', parameters('cname')), parameters('cname'))]"
                    },
                    "sslBase64EncodedPfxCertificate": {
                        "value": "[parameters('sslBase64EncodedPfxCertificate')]"
                    },
                    "sslPfxCertificatePassword": {
                        "value": "[parameters('sslPfxCertificatePassword')]"
                    },
                    "dbType": {
                        "value": "[parameters('dbType')]"
                    },
                    "azureSqlPassword": {
                        "value": "[parameters('azureSqlPassword')]"
                    },
                    "azureSqlTier": {
                        "value": "[parameters('dbTierSize')]"
                    },
                    "azureSqlUsername": {
                        "value": "[parameters('azureSqlUsername')]"
                    },
                    "bbsDiskSize": {
                        "value": "[parameters('bbsDiskSize')]"
                    },
                    "bbsDiskStorageType": {
                        "value": "[parameters('bbsDiskStorageType')]"
                    },
                    "bbsHazelcastTag": {
                        "value": "[parameters('bbsHazelcastTag')]"
                    },
                    "bbsNodeCount": {
                        "value": "[parameters('bbsNodeCount')]"
                    },
                    "bbsNodePrefix": {
                        "value": "[parameters('bbsNodePrefix')]"
                    },
                    "bbsSize": {
                        "value": "[parameters('bbsSize')]"
                    },
                    "bitbucketAdminEmail": {
                        "value": "[parameters('bitbucketAdminEmail')]"
                    },
                    "bitbucketAdminName": {
                        "value": "[parameters('bitbucketAdminName')]"
                    },
                    "bitbucketAdminPassword": {
                        "value": "[parameters('bitbucketAdminPassword')]"
                    },
                    "bitbucketAdminUsername": {
                        "value": "[parameters('bitbucketAdminUsername')]"
                    },
                    "bitbucketVersion": {
                        "value": "[parameters('bitbucketVersion')]"
                    },
                    "customDownloadUrl": {
                        "value": "[parameters('customDownloadUrl')]"
                    },
                    "esDataDiskSize": {
                        "value": "[parameters('esDataDiskSize')]"
                    },
                    "esDataNodeCount": {
                        "value": "[parameters('esDataNodeCount')]"
                    },
                    "esNodeSize": {
                        "value": "[parameters('esNodeSize')]"
                    },
                    "license": {
                        "value": "[parameters('license')]"
                    },
                    "nfsDiskSize": {
                        "value": "[parameters('nfsDiskSize')]"
                    },
                    "nfsVmSize": {
                        "value": "[parameters('nfsVmSize')]"
                    },
                    "repositoryLocation": {
                        "value": "[parameters('repositoryLocation')]"
                    },
                    "scriptsBranch": {
                        "value": "[parameters('scriptsBranch')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    },
                    "vnetName": {
                        "value": "[reference('vpcTemplate').outputs.vnetName.value]"
                    },
                    "bbsSubnetName": {
                        "value": "[reference('vpcTemplate').outputs.bbsSubnetName.value]"
                    },
                    "appGtwySubnetName": {
                        "value": "[reference('vpcTemplate').outputs.appGtwySubnetName.value]"
                    },
                    "esSubnetName": {
                        "value": "[reference('vpcTemplate').outputs.esSubnetName.value]"
                    },
                    "nfsPrivateIpAddress": {
                        "value": "[reference('vpcTemplate').outputs.nfsPrivateIpAddress.value]"
                    },
                    "lbFqdn": {
                        "value": "[reference('vpcTemplate').outputs.lbFqdn.value]"
                    },
                    "enableAnalytics": {
                        "value": "[parameters('enableAnalytics')]"
                    },
                    "workspaceSku": {
                        "value": "[parameters('workspaceSku')]"
                    }

                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "domainTemplate",
            "dependsOn": [
                "bitBucketTemplate"
            ],
            "condition": "[greater(length(parameters('cname')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('domainTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cname": {
                        "value": "[parameters('cname')]"
                    },
                    "gtwyIpName": {
                        "value": "[reference('bitBucketTemplate').outputs.gtwyIpName.value]"
                    },
                    "prefix": {
                        "value": "bitbucket"
                    },
                    "sshLbIpName": {
                        "value": "[reference('vpcTemplate').outputs.sshLbIpName.value]"
                    },
                    "sshPrefix": {
                        "value": "ssh-bitbucket"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-05-01",
            "name": "alertsTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[parameters('enableEmailAlerts')]",
            "dependsOn": [
                "bitbucketTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('alertsTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUserEmail": {
                        "value": "[parameters('bitbucketAdminEmail')]"
                    },
                    "gtwyName": {
                        "value": "[reference('bitbucketTemplate').outputs.gtwyName.value]"
                    },
                    "bbsClusterName": {
                        "value": "[reference('bitbucketTemplate').outputs.bbsClusterName.value]"
                    },
                    "appInsightsName": {
                        "value": "[if(parameters('enableApplicationInsights'), reference('bitbucketTemplate').outputs.appInsightsName.value, '')]"
                    },
                    "statusCheckUrl": {
                        "value": "[concat(if(not(empty(parameters('sslBase64EncodedPfxCertificate'))), concat('https://', if(greater(length(parameters('cname')), 0), reference('domainTemplate').outputs.alias.value, reference('bitbucketTemplate').outputs.appEndpoint.value)), concat('http://', if(greater(length(parameters('cname')), 0), reference('domainTemplate').outputs.alias.value, reference('bitbucketTemplate').outputs.appEndpoint.value))), '/status')]"
                    },
                    "dbType": {
                        "value": "[if(equals(parameters('dbType'), 'Azure SQL DB'), 'sqlserver', if(equals(parameters('dbType'), 'Azure DB for PostgreSQL'), 'postgres', 'mysql'))]"
                    },
                    "isDbVCoreModel": {
                        "value": "[contains('GeneralPurpose, BusinessCritical', parameters('dbTier'))]"
                    },
                    "dbDatabaseServerName": {
                        "value": "[split(reference('bitbucketTemplate').outputs.dbDatabaseServerName.value, '.')[0]]"
                    },
                    "dbDatabaseName": {
                        "value": "[reference('bitbucketTemplate').outputs.dbDatabaseName.value]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "appEndpoint": {
            "type": "string",
            "value": "[reference('bitbucketTemplate').outputs.appEndpoint.value]"
        },
        "sshEndpoint": {
            "type": "string",
            "value": "[reference('bitbucketTemplate').outputs.sshEndpoint.value]"
        },
        "ssh": {
            "type": "string",
            "value": "[concat('ssh ', parameters('adminUsername'), '@', reference('vpcTemplate').outputs.ssh.value)]"
        },
        "jumpbox": {
            "type": "string",
            "value": "[reference('vpcTemplate').outputs.lbFqdn.value]"
        },
        "nfs": {
            "type": "string",
            "value": "[reference('bitbucketTemplate').outputs.nfs.value]"
        }
    }
}