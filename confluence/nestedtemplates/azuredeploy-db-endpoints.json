{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "dbServerName": {
      "type": "string",
      "metadata": {
        "description": "The database server name."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Confluence virtual network."
      }
    },
    "appSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet within the Confluence virtual network where the Confluence cluster is located."
      }
    },
    "jumpboxSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet within the virtual network where the Jumpbox is located."
      }
    },
    "privateDnsZoneName": {
      "type": "String",
      "metadata": {
        "description": "The name of the Private DNS Zone."
      }
    },
    "dbType": {
      "type": "string",
      "allowedValues": [
        "sqlserver",
        "postgres"
      ],
      "defaultValue": "sqlserver",
      "metadata": {
        "description": "The database type."
      }
    }
  },
  "variables": {
    "groupId": "[if(equals(parameters('dbType'), 'sqlserver'), 'sqlServer', 'postgresqlServer')]",
    "endpoint": {
      "cluster": "[concat('Cluster-', uniqueString(resourceGroup().id))]",
      "jumpbox": "[concat('Jumpbox-', uniqueString(resourceGroup().id))]"
    },
    "sqlServerLinkServiceId": "[resourceId('Microsoft.Sql/servers', parameters('dbServerName'))]",
    "postgresLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]",
    "privateLinkServiceId": "[if(equals(parameters('dbType'), 'sqlserver'), variables('sqlServerLinkServiceId'), variables('postgresLinkServiceId'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-04-01",
      "name": "[variables('endpoint').cluster]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('endpoint').cluster]",
            "properties": {
              "privateLinkServiceId": "[variables('privateLinkServiceId')]",
              "groupIds": [
                "[variables('groupId')]"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-approved",
                "actionsRequired": "None"
              }
            }
          }
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('appSubnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2020-04-01",
      "name": "[variables('endpoint').jumpbox]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('endpoint').jumpbox]",
            "properties": {
              "privateLinkServiceId": "[variables('privateLinkServiceId')]",
              "groupIds": [
                "[variables('groupId')]"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-approved",
                "actionsRequired": "None"
              }
            }
          }
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('jumpboxSubnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('endpoint').cluster, '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('endpoint').cluster)]",
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-database-windows-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
            }
          }
        ]
      }
    },
        {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('endpoint').jumpbox, '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('endpoint').jumpbox)]",
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-database-windows-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "[parameters('privateDnsZoneName')]",
      "location": "global",
      "properties": {
        "maxNumberOfRecordSets": 25000,
        "maxNumberOfVirtualNetworkLinks": 1000,
        "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
        "numberOfRecordSets": 1,
        "numberOfVirtualNetworkLinks": 1,
        "numberOfVirtualNetworkLinksWithRegistration": 0,
        "provisioningState": "Succeeded"
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[concat(parameters('privateDnsZoneName'), '/', uniqueString(resourceGroup().id))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      }
    }
  ]
}
