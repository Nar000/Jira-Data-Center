# This is a sample build configuration for Python.
# Check our guides at https://confluence.atlassian.com/x/x4UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: python:3.5.1

options:
  max-time: 60
 
pipelines:
  custom:
    nightlySmokeTest:
    - step:
        caches:
          - pip
        script:
          - pip install --upgrade pip
          - pip install setuptools -U
          - pip install azure-cli
          - env | sort
          - az login --service-principal --username $AZURE_APP_ID --password $AZURE_PASSWORD --tenant $AZURE_TENANT_ID
          - echo "{\"jumpboxSshKey\":{\"value\":\"$JUMPBOX_SSH_KEY\"}}" > jumpboxParam.json
          - cat jumpboxParam.json
          - export "AZURE_PIPELINE_RG=PIPELINE_$$"
          - echo $AZURE_PIPELINE_RG
          - pipe: microsoft/azure-cli-run:1.0.1
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_PASSWORD
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              CLI_COMMAND: 'az group create --resource-group $AZURE_PIPELINE_RG --location $AZURE_LOCATION'
              DEBUG: 'false'
          - pipe: microsoft/azure-arm-deploy:1.0.1
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_PASSWORD
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_PIPELINE_RG
              AZURE_LOCATION: $AZURE_LOCATION
              AZURE_DEPLOYMENT_NAME: $AZURE_PIPELINE_RG
              AZURE_DEPLOYMENT_MODE: 'Complete'
              AZURE_DEPLOYMENT_TEMPLATE_URI: 'https://bitbucket.org/atlassian/atlassian-azure-deployment/raw/master/jira/azuredeploy.json'
              AZURE_DEPLOYMENT_PARAMETERS: 'https://bitbucket.org/atlassian/atlassian-azure-deployment/raw/master/jira/azuredeploy.parameters.json --parameters @jumpboxParam.json'
              DEBUG: 'false'
          - az group deployment show --resource-group $AZURE_PIPELINE_RG --name $AZURE_PIPELINE_RG > azureOutput.json
          - cat azureOutput.json  
        after-script:
          - echo "Cleaning up!"
          - pipe: microsoft/azure-cli-run:1.0.1
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_PASSWORD
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              CLI_COMMAND: 'az group delete --resource-group $AZURE_PIPELINE_RG --no-wait'
              DEBUG: 'false'
              



